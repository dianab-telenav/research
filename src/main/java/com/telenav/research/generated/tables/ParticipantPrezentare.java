/**
 * This class is generated by jOOQ
 */
package com.telenav.research.generated.tables;


import com.telenav.research.generated.ItdaysDb;
import com.telenav.research.generated.Keys;
import com.telenav.research.generated.tables.records.ParticipantPrezentareRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ParticipantPrezentare extends TableImpl<ParticipantPrezentareRecord> {

	private static final long serialVersionUID = -1900581566;

	/**
	 * The reference instance of <code>itdays_db.participant_prezentare</code>
	 */
	public static final ParticipantPrezentare PARTICIPANT_PREZENTARE = new ParticipantPrezentare();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ParticipantPrezentareRecord> getRecordType() {
		return ParticipantPrezentareRecord.class;
	}

	/**
	 * The column <code>itdays_db.participant_prezentare.id_participant</code>.
	 */
	public final TableField<ParticipantPrezentareRecord, Integer> ID_PARTICIPANT = createField("id_participant", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>itdays_db.participant_prezentare.id_prezentare</code>.
	 */
	public final TableField<ParticipantPrezentareRecord, Integer> ID_PREZENTARE = createField("id_prezentare", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>itdays_db.participant_prezentare</code> table reference
	 */
	public ParticipantPrezentare() {
		this("participant_prezentare", null);
	}

	/**
	 * Create an aliased <code>itdays_db.participant_prezentare</code> table reference
	 */
	public ParticipantPrezentare(String alias) {
		this(alias, PARTICIPANT_PREZENTARE);
	}

	private ParticipantPrezentare(String alias, Table<ParticipantPrezentareRecord> aliased) {
		this(alias, aliased, null);
	}

	private ParticipantPrezentare(String alias, Table<ParticipantPrezentareRecord> aliased, Field<?>[] parameters) {
		super(alias, ItdaysDb.ITDAYS_DB, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ParticipantPrezentareRecord> getPrimaryKey() {
		return Keys.KEY_PARTICIPANT_PREZENTARE_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ParticipantPrezentareRecord>> getKeys() {
		return Arrays.<UniqueKey<ParticipantPrezentareRecord>>asList(Keys.KEY_PARTICIPANT_PREZENTARE_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<ParticipantPrezentareRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<ParticipantPrezentareRecord, ?>>asList(Keys.FK_PARTICIPANT, Keys.FK_PREZENTARE);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ParticipantPrezentare as(String alias) {
		return new ParticipantPrezentare(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ParticipantPrezentare rename(String name) {
		return new ParticipantPrezentare(name, null);
	}
}
