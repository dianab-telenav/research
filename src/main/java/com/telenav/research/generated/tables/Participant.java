/**
 * This class is generated by jOOQ
 */
package com.telenav.research.generated.tables;


import com.telenav.research.generated.ItdaysDb;
import com.telenav.research.generated.Keys;
import com.telenav.research.generated.tables.records.ParticipantRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Participant extends TableImpl<ParticipantRecord> {

	private static final long serialVersionUID = -1916697584;

	/**
	 * The reference instance of <code>itdays_db.participant</code>
	 */
	public static final Participant PARTICIPANT = new Participant();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ParticipantRecord> getRecordType() {
		return ParticipantRecord.class;
	}

	/**
	 * The column <code>itdays_db.participant.id</code>.
	 */
	public final TableField<ParticipantRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>itdays_db.participant.nume</code>.
	 */
	public final TableField<ParticipantRecord, String> NUME = createField("nume", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "");

	/**
	 * The column <code>itdays_db.participant.email</code>.
	 */
	public final TableField<ParticipantRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "");

	/**
	 * Create a <code>itdays_db.participant</code> table reference
	 */
	public Participant() {
		this("participant", null);
	}

	/**
	 * Create an aliased <code>itdays_db.participant</code> table reference
	 */
	public Participant(String alias) {
		this(alias, PARTICIPANT);
	}

	private Participant(String alias, Table<ParticipantRecord> aliased) {
		this(alias, aliased, null);
	}

	private Participant(String alias, Table<ParticipantRecord> aliased, Field<?>[] parameters) {
		super(alias, ItdaysDb.ITDAYS_DB, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<ParticipantRecord, Integer> getIdentity() {
		return Keys.IDENTITY_PARTICIPANT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ParticipantRecord> getPrimaryKey() {
		return Keys.KEY_PARTICIPANT_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ParticipantRecord>> getKeys() {
		return Arrays.<UniqueKey<ParticipantRecord>>asList(Keys.KEY_PARTICIPANT_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Participant as(String alias) {
		return new Participant(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Participant rename(String name) {
		return new Participant(name, null);
	}
}
