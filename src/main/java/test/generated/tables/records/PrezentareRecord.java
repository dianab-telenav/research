/**
 * This class is generated by jOOQ
 */
package test.generated.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import test.generated.tables.Prezentare;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PrezentareRecord extends UpdatableRecordImpl<PrezentareRecord> implements Record4<Integer, String, Timestamp, Integer> {

	private static final long serialVersionUID = -2103956330;

	/**
	 * Setter for <code>itdays_db.prezentare.id</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>itdays_db.prezentare.id</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>itdays_db.prezentare.titlu</code>.
	 */
	public void setTitlu(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>itdays_db.prezentare.titlu</code>.
	 */
	public String getTitlu() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>itdays_db.prezentare.data</code>.
	 */
	public void setData(Timestamp value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>itdays_db.prezentare.data</code>.
	 */
	public Timestamp getData() {
		return (Timestamp) getValue(2);
	}

	/**
	 * Setter for <code>itdays_db.prezentare.id_topic</code>.
	 */
	public void setIdTopic(Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>itdays_db.prezentare.id_topic</code>.
	 */
	public Integer getIdTopic() {
		return (Integer) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, String, Timestamp, Integer> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, String, Timestamp, Integer> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Prezentare.PREZENTARE.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Prezentare.PREZENTARE.TITLU;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field3() {
		return Prezentare.PREZENTARE.DATA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return Prezentare.PREZENTARE.ID_TOPIC;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getTitlu();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value3() {
		return getData();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getIdTopic();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PrezentareRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PrezentareRecord value2(String value) {
		setTitlu(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PrezentareRecord value3(Timestamp value) {
		setData(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PrezentareRecord value4(Integer value) {
		setIdTopic(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PrezentareRecord values(Integer value1, String value2, Timestamp value3, Integer value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached PrezentareRecord
	 */
	public PrezentareRecord() {
		super(Prezentare.PREZENTARE);
	}

	/**
	 * Create a detached, initialised PrezentareRecord
	 */
	public PrezentareRecord(Integer id, String titlu, Timestamp data, Integer idTopic) {
		super(Prezentare.PREZENTARE);

		setValue(0, id);
		setValue(1, titlu);
		setValue(2, data);
		setValue(3, idTopic);
	}
}
